{"version":3,"sources":["services/persons.js","components/Notification.js","components/App.js","index.js"],"names":["baseURL","axios","get","then","response","data","newObject","console","log","post","id","put","delete","notificationGreenStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","notificationRedStyle","Notification","notification","tmpStyle","type","style","message","Filter","setSearchName","onChange","event","target","value","PersonForm","persons","setPersons","newName","setNewName","newNumber","setNumber","setNotification","onSubmit","preventDefault","matchedPerson","find","person","name","includes","window","confirm","newObj","number","personServices","returnedPerson","map","setTimeout","catch","error","filter","concat","DeletePerson","onClick","tmp","ShowPersons","searchName","newPersons","toLocaleLowerCase","App","useState","useEffect","returnedPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17cdf44d.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseURL = \"/api/persons\";\nconst getAll = () => {\n  const request = axios.get(baseURL);\n  return request.then((response) => response.data);\n};\nconst create = (newObject) => {\n  console.log(newObject);\n  const request = axios.post(baseURL, newObject);\n  return request.then((response) => response.data);\n};\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseURL}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\nconst deletePerson = (id) => {\n  const request = axios.delete(`${baseURL}/${id}`);\n  return request.then((response) => response.data);\n};\n\nexport default { getAll, create, update, deletePerson };\n","const notificationGreenStyle = {\n  color: \"green\",\n  background: \"lightgrey\",\n  fontSize: 20,\n  borderStyle: \"solid\",\n  borderRadius: 5,\n  padding: 10,\n  marginBottom: 10,\n};\nconst notificationRedStyle = {\n  color: \"red\",\n  background: \"lightgrey\",\n  fontSize: 20,\n  borderStyle: \"solid\",\n  borderRadius: 5,\n  padding: 10,\n  marginBottom: 10,\n};\nconst Notification = ({ notification }) => {\n  if (notification === null) {\n    return null;\n  }\n  let tmpStyle = notificationRedStyle;\n  if (notification.type === \"green\") {\n    tmpStyle = notificationGreenStyle;\n  }\n  return (\n    <div style={tmpStyle}>\n      {notification.message}\n    </div>\n  );\n};\n\nexport { Notification };\n","import React, { useEffect, useState } from \"react\";\nimport personServices from \"../services/persons.js\";\nimport { Notification } from \"./Notification.js\";\nconst Filter = ({ setSearchName }) => {\n  const handleSearch = (event) => {\n    setSearchName(event.target.value);\n  };\n  return (\n    <div>\n      filter shown with\n      <input\n        onChange={handleSearch}\n      />\n    </div>\n  );\n};\nconst PersonForm = (\n  {\n    persons,\n    setPersons,\n    newName,\n    setNewName,\n    newNumber,\n    setNumber,\n    setNotification,\n  },\n) => {\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const matchedPerson = persons.find((person) => person.name === newName);\n    if (persons.includes(matchedPerson)) {\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook, replace the old number with a new one?`,\n        )\n      ) {\n        const newObj = { name: newName, number: newNumber };\n        personServices\n          .update(matchedPerson.id, newObj)\n          .then((returnedPerson) => {\n            setPersons(\n              persons.map((person) =>\n                person.id !== returnedPerson.id ? person : returnedPerson\n              ),\n            );\n            setNotification(\n              { message: `Updated ${returnedPerson.name}`, type: \"green\" },\n            );\n            setTimeout(() => {\n              setNotification(null);\n            }, 5000);\n\n            // Notification(`Updated ${returnedPerson.name}`);\n          })\n          .catch((error) => {\n            setNotification(\n              {\n                message:\n                  `Information of ${matchedPerson.name} has already been removed from server`,\n                type: \"red\",\n              },\n            );\n            setTimeout(() => {\n              setNotification(null);\n            }, 5000);\n            setPersons(\n              persons.filter((person) => person.id !== matchedPerson.id),\n            );\n          });\n      }\n      // window.alert(`${newName} is already added to phonebook`);\n    } else {\n      const newObj = { name: newName, number: newNumber };\n      personServices\n        .create(newObj)\n        .then((returnedPerson) => {\n          setPersons(persons.concat(returnedPerson));\n          setNotification(\n            { message: `Added ${returnedPerson.name}`, type: \"green\" },\n          );\n          setTimeout(() => {\n            setNotification(null);\n          }, 5000);\n        })\n        .catch((error) => console.log(error));\n    }\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        name: <input\n          onChange={(event) => {\n            setNewName(event.target.value);\n          }}\n        />\n      </div>\n      <div>\n        number:<input\n          onChange={(event) => {\n            setNumber(event.target.value);\n          }}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\nconst DeletePerson = ({ person, persons, setPersons, setNotification }) => {\n  const handleDelete = () => {\n    if (window.confirm(`Delete ${person.name} ?`)) {\n      personServices.deletePerson(person.id);\n      setPersons(persons.filter((tmp) => tmp.id !== person.id));\n      setNotification(\n        {\n          message: `Deleted ${person.name}`,\n          type: \"red\",\n        },\n      );\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n    }\n  };\n  return (\n    <button onClick={handleDelete}>delete</button>\n  );\n};\nconst ShowPersons = ({ searchName, persons, setPersons, setNotification }) => {\n  const newPersons = persons.filter((person) => {\n    if (person.name.toLocaleLowerCase().includes(searchName)) {\n      return true;\n    }\n    return false;\n  });\n\n  return (<div>\n    <ul>\n      {newPersons.map((person) => {\n        return (\n          <li key={person.name}>\n            {person.name}\n            {\" \"}\n            {person.number}\n            {\" \"}\n            <DeletePerson\n              person={person}\n              persons={persons}\n              setPersons={setPersons}\n              setNotification={setNotification}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  </div>);\n};\nconst App = () => {\n  const [persons, setPersons] = useState(\n    [],\n  );\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNumber] = useState(\"\");\n  const [searchName, setSearchName] = useState(\"\");\n  const [notification, setNotification] = useState(null);\n  useEffect(() => {\n    personServices\n      .getAll()\n      .then((returnedPersons) => {\n        setPersons(returnedPersons);\n      });\n    // axios\n    //   .get(\"http://localhost:3001/persons\")\n    //   .then((response) => {\n    //     setPersons(response.data);\n    //   });\n  }, []);\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n      <Filter setSearchName={setSearchName} />\n      <h2>add a new</h2>\n      <PersonForm\n        persons={persons}\n        setPersons={setPersons}\n        newName={newName}\n        newNumber={newNumber}\n        setNewName={setNewName}\n        setNumber={setNumber}\n        setNotification={setNotification}\n      />\n      <h2>Numbers</h2>\n      <ShowPersons\n        searchName={searchName}\n        persons={persons}\n        setPersons={setPersons}\n        setNotification={setNotification}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App.js\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}